function [a] = loadpickle(filename, macname, python_path)
%loadpickle return a strcuture containging the results contained in the "filename"
%   "filename": absolute path to the pickle(.p) file generated by the simulators
%	"macname": MAC used by the simulator 'SLOTTED_ALOHA' or 'ALOHA'
% 	"python_path": absolute path to the python executable

    if ~exist(filename,'file')
        error('%s is not a file',filename);
    end
    outname = [tempname() '.mat'];
    if strcmp(macname,'SLOTTED_ALOHA')
        pyscript = ['import pickle;import sys;import scipy.io;file=open(r''' filename ''', mode=''rb'');dat=pickle.load(file);file.close();cell_size= dat[''cell_size''];gateway_data=dat[''gateway''];packets_received=[gateway_data[dict_item][''PacketsReceived''] for dict_item in gateway_data];packets_received_per_node=[gateway_data[dict_item][''PacketperNode''] for dict_item in gateway_data];Packets_received_per_node=[[v for v in packets_received_per_node[i].items()] for i in range(len(packets_received_per_node)) ];locations_of_node=[gateway_data[dict_item][''Location_of_Node''] for dict_item in gateway_data];Locations_of_node=[[v for v in locations_of_node[i].items()] for i in range(len(locations_of_node)) ];weak_pacekts=[gateway_data[dict_item][''ULWeakPackets''] for dict_item in gateway_data];node_data=dat[''nodes''];avg_packet_sent=[node_data[dict_item][''TotalPackets''][7.9] for dict_item in node_data];avg_collided_packet_per_node=[node_data[dict_item][''CollidedPackets''][7.9] for dict_item in node_data];Ndevice=dat[''total_devices''];num_simulations =dat[''num_simulations''];dat_o = {''cell_size'': cell_size,''num_simulations'': num_simulations,''Ndevice'': Ndevice,''packets_received'': packets_received,''packets_received_per_node'':Packets_received_per_node,''weak_pacekts'': weak_pacekts,''avg_packet_sent'': avg_packet_sent,''avg_collided_packet'':avg_collided_packet_per_node,''nodes_locations'':Locations_of_node}; scipy.io.savemat(r''' outname ''',dat_o)'];
    elseif strcmp(macname,'ALOHA')
        pyscript = ['import pickle;import sys;import scipy.io;file=open(r''' filename ''', mode=''rb'');dat=pickle.load(file);file.close();cell_size= dat[''cell_size''];gateway_data=dat[''gateway''];packets_received=[gateway_data[dict_item][''PacketsReceived''] for dict_item in gateway_data];packets_received_per_node=[gateway_data[dict_item][''PacketperNode''] for dict_item in gateway_data];Packets_received_per_node=[[v for v in packets_received_per_node[i].items()] for i in range(len(packets_received_per_node)) ];locations_of_node=[gateway_data[dict_item][''Location_of_Node''] for dict_item in gateway_data];Locations_of_node=[[v for v in locations_of_node[i].items()] for i in range(len(locations_of_node)) ];weak_pacekts=[gateway_data[dict_item][''ULWeakPackets''] for dict_item in gateway_data];node_data=dat[''nodes''];avg_packet_sent=[node_data[dict_item][''TotalPackets''][7.9] for dict_item in node_data];avg_collided_packet_per_node=[node_data[dict_item][''CollidedPackets''][7.9] for dict_item in node_data];Ndevice=dat[''total_devices''];num_simulations =dat[''num_simulations''];dat_o = {''cell_size'': cell_size,''num_simulations'': num_simulations,''Ndevice'': Ndevice,''packets_received'': packets_received,''packets_received_per_node'':Packets_received_per_node,''weak_pacekts'': weak_pacekts,''avg_packet_sent'': avg_packet_sent,''avg_collided_packet'':avg_collided_packet_per_node,''nodes_locations'':Locations_of_node}; scipy.io.savemat(r''' outname ''',dat_o)'];
    end
    system(['C: & cd "' python_path '"  & python -c "' pyscript '"']);
    a = load(outname);
end

